# .github/workflows/mlops_pipeline.yml

name: KlinikOps MLOps Pipeline (CI/CD/DVC)

on:
  push:
    branches: [ main, develop ]   # Triggers on push to main or develop
  pull_request:
    branches: [ main ]            # Triggers when a PR is opened to main

jobs:
  full-mlops-workflow:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Checkout Repository and History
        uses: actions/checkout@v4
        # Needed for DVC: Fetches full history and submodules/LFS files.
        with:
          submodules: recursive
          fetch-depth: 0 

      - name: 2. Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 3. Install Dependencies (including DVC)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc 

      # --- CI STAGE (CODE QUALITY & TESTING) ---
      
      - name: 4. Run Pytest
        env:
          PYTHONPATH: .
        run: |
          # Runs all tests in the 'tests' directory.
          pytest
          
      - name: 5. Lint with Flake8
        run: |
          # Checks code quality and style compliance (PEP8).
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      # --- CD/ML STAGE (DATA PULL & TRAINING) ---

      - name: 6. DVC Pull Data
        # GitHub Secrets'ı kullanarak Azure kimlik bilgilerini ortam değişkenlerine yüklüyoruz
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        run: |

      - name: 7. Run Preprocessing and Train Model
        env:
          PYTHONPATH: .
        run: |
          echo "Starting Data Processing and Model Training..."
          # Runs data processing (creates train.csv and test.csv)
          python scripts/data_processing.py
          
          # Runs model training and logs results to MLflow
          python scripts/train.py

      - name: 8. Archive MLflow Artifacts
        # Uploads the trained model, metrics, and MLflow logs as a ZIP file.
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-run-artifacts
          path: mlruns/